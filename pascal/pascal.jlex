import java_cup.runtime.Symbol;
%%
%class Lexer
%line
%column
%cup
%standalone

ICNST = [0-9]+

%state COMMENT

%%
<YYINITIAL>
{
    "print"		            { return new Symbol(sym.TK_PRINT); }
    \/\/[^\n]*              { return new Symbol(sym.TK_LCOMM); }
    "/*"                    { yybegin(COMMENT); }
    "int"                   { return new Symbol(sym.TK_DECL); }
    "if"                    { return new Symbol(sym.TK_IF); }
    "else"                  { return new Symbol(sym.TK_ELSE); }
    "while"                 { return new Symbol(sym.TK_WHILE); }
    ";"		                { return new Symbol(sym.TK_SEP); }
    "+"                     { return new Symbol(sym.TK_PLUS); }
    "-"                     { return new Symbol(sym.TK_MINUS); }
    "*"                     { return new Symbol(sym.TK_TIMES); }
    "/"                     { return new Symbol(sym.TK_DIVIDE); }
    "%"                     { return new Symbol(sym.TK_MOD); }
    "="                     { return new Symbol(sym.TK_ASSIGN); }
    "("                     { return new Symbol(sym.TK_OP); }
    ")"                     { return new Symbol(sym.TK_CP); }
    "{"                     { return new Symbol(sym.TK_OB); }
    "}"                     { return new Symbol(sym.TK_CB); }
    "<< INPUT"              { return new Symbol(sym.TK_IN); }
    {ICNST}		            { return new Symbol(sym.TK_ICNST, new Integer(yytext())); }
    [a-zA-Z]+[a-zA-Z0-9]*   { return new Symbol(sym.TK_IDENT, new String(yytext())); }
    [\ \t\n\r\f]            { }
    .		                { System.err.println("unexpected char '" + yytext() +
                                                 "' line " + yyline);
                              return new Symbol(sym.error); }
}

<COMMENT> 
{

    "*/"                   { yybegin(YYINITIAL); }
    .|\n                   { }
}

